version: '3.8'

services:
  # Servicio de PostgreSQL
  db:
    image: postgres:13
    container_name: cubaweek_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports: 
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - flask_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Servicio de Flask
  backend:
    build: ./backend
    container_name: cubaweek_backend_app
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    ports: 
      - 5000:5000
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - flask_network
    command: python app.py

  # Servicio de Flask
  frontend:
    build: ./frontend
    container_name: cubaweek_frontend_app
    ports: 
      - 5173:5173
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - flask_network

volumes:
  postgres_data:

networks:
  flask_network:
    driver: bridge